ECMAScript 6 w3schools.com THE WORLD'S LARGEST WEB DEVELOPER SITE HTML CSS JAVASCRIPT SQL PYTHON PHP BOOTSTRAP HOW TO W3.CSS JQUERY JAVA MORE ? ? ? FORUM EXERCISES REFERENCES ? HTML and CSS Learn HTML Learn CSS Learn Bootstrap Learn W3.CSS Learn Colors Learn Icons Learn Graphics Learn SVG Learn Canvas Learn How To Learn Sass XML Learn XML Learn XML AJAX Learn XML DOM Learn XML DTD Learn XML Schema Learn XSLT Learn XPath Learn XQuery JavaScript Learn JavaScript Learn jQuery Learn React Learn AngularJS Learn JSON Learn AJAX Learn W3.JS Programming Learn Python Learn Java Learn C++ Learn C# Learn Machine Learning Server Side Learn SQL Learn PHP Learn ASP Learn Node.js Learn Raspberry Pi Web Building Web Templates Web Statistics Web Certificates Web Editor Web Development Test Your Typing Speed XML Learn XML Learn XML AJAX Learn XML DOM Learn XML DTD Learn XML Schema Learn XSLT Learn XPath Learn XQuery ? HTML HTML Tag Reference HTML Browser Support HTML Event Reference HTML Color Reference HTML Attribute Reference HTML Canvas Reference HTML SVG Reference HTML Character Sets Google Maps Reference CSS CSS Reference CSS Browser Support CSS Selector Reference Bootstrap 3 Reference Bootstrap 4 Reference W3.CSS Reference Icon Reference Sass Reference JavaScript JavaScript Reference HTML DOM Reference jQuery Reference AngularJS Reference W3.JS Reference Programming Python Reference Java Reference Server Side SQL Reference PHP Reference ASP Reference XML XML Reference XML Http Reference XSLT Reference XML Schema Reference Character Sets HTML Character Sets HTML ASCII HTML ANSI HTML Windows-1252 HTML ISO-8859-1 HTML Symbols HTML UTF-8 ? Exercises HTML Exercises CSS Exercises JavaScript Exercises SQL Exercises PHP Exercises Python Exercises jQuery Exercises Bootstrap Exercises Java Exercises C++ Exercises C# Exercises Quizzes HTML Quiz CSS Quiz JavaScript Quiz SQL Quiz PHP Quiz Python Quiz jQuery Quiz Bootstrap Quiz Java Quiz C++ Quiz C# Quiz XML Quiz Certificates HTML Certificate CSS Certificate JavaScript Certificate SQL Certificate PHP Certificate Python Certificate jQuery Certificate Bootstrap Certificate XML Certificate JS Tutorial JS HOME JS Introduction JS Where To JS Output JS Statements JS Syntax JS Comments JS Variables JS Operators JS Arithmetic JS Assignment JS Data Types JS Functions JS Objects JS Events JS Strings JS String Methods JS Numbers JS Number Methods JS Arrays JS Array Methods JS Array Sort JS Array Iteration JS Dates JS Date Formats JS Date Get Methods JS Date Set Methods JS Math JS Random JS Booleans JS Comparisons JS Conditions JS Switch JS Loop For JS Loop While JS Break JS Type Conversion JS Bitwise JS RegExp JS Errors JS Scope JS Hoisting JS Strict Mode JS this Keyword JS Let JS Const JS Arrow Function JS Classes JS Debugging JS Style Guide JS Best Practices JS Mistakes JS Performance JS Reserved Words JS Versions JS Version ES5 JS Version ES6 JS JSON JS Forms JS Forms Forms API JS Objects Object Definitions Object Properties Object Methods Object Display Object Accessors Object Constructors Object Prototypes Object ECMAScript 5 JS Functions Function Definitions Function Parameters Function Invocation Function Call Function Apply Function Closures JS HTML DOM DOM Intro DOM Methods DOM Document DOM Elements DOM HTML DOM CSS DOM Animations DOM Events DOM Event Listener DOM Navigation DOM Nodes DOM Collections DOM Node Lists JS Browser BOM JS Window JS Screen JS Location JS History JS Navigator JS Popup Alert JS Timing JS Cookies JS AJAX AJAX Intro AJAX XMLHttp AJAX Request AJAX Response AJAX XML File AJAX PHP AJAX ASP AJAX Database AJAX Applications AJAX Examples JS JSON JSON Intro JSON Syntax JSON vs XML JSON Data Types JSON Parse JSON Stringify JSON Objects JSON Arrays JSON PHP JSON HTML JSON JSONP JS vs jQuery jQuery Selectors jQuery HTML jQuery CSS jQuery DOM JS Examples JS Examples JS HTML DOM JS HTML Input JS HTML Objects JS HTML Events JS Browser JS Exercises JS Quiz JS Certificate JS References JavaScript Objects HTML DOM Objects ECMAScript 6 - ECMAScript 2015 ? Previous Next ? What is ECMAScript 6? ECMAScript 6 is also known as ES6 and ECMAScript 2015. Some people call it JavaScript 6. This chapter will introduce some of the new features in ES6. JavaScript let JavaScript const JavaScript Arrow Functions JavaScript Classes Default parameter values Array.find() Array.findIndex() Exponentiation (**) (EcmaScript 2016) Browser Support for ES6 (ECMAScript 2015) Safari 10 and Edge 14 were the first browsers to fully support ES6: Chrome 58 Edge 14 Firefox 54 Safari 10 Opera 55 Jan 2017 Aug 2016 Mar 2017 Jul 2016 Aug 2018 JavaScript let The let statement allows you to declare a variable with block scope. Example var x = 10; // Here x is 10 { let x = 2; // Here x is 2 } // Here x is 10 Try it Yourself ? JavaScript const The const statement allows you to declare a constant (a JavaScript variable with a constant value). Constants are similar to let variables, except that the value cannot be changed. Example var x = 10; // Here x is 10 { const x = 2; // Here x is 2 } // Here x is 10 Try it Yourself ? Read more about let and const in our JavaScript Let / Const Chapter. Arrow Functions Arrow functions allows a short syntax for writing function expressions. You don't need the function keyword, the return keyword, and the curly brackets. Example // ES5 var x = function(x, y) { return x * y; } // ES6 const x = (x, y) => x * y; Try it Yourself ? Arrow functions do not have their own this. They are not well suited for defining object methods. Arrow functions are not hoisted. They must be defined before they are used. Using const is safer than using var, because a function expression is always constant value. You can only omit the return keyword and the curly brackets if the function is a single statement. Because of this, it might be a good habit to always keep them: Example const x = (x, y) => { return x * y }; Try it Yourself ? Learn more about Arrow Functions in our JavaScript Arrow Function chapter. Classes ES6 introduced classes. A class is a type of function, but instead of using the keyword function to initiate it, we use the keyword class, and the properties are assigned inside a constructor() method. Use the keyword class to create a class, and always add a constructor method. The constructor method is called each time the class object is initialized. Example A simple class definition for a class named "Car": class Car { constructor(brand) { this.carname = brand; } } Now you can create objects using the Car class: Example Create an object called "mycar" based on the Car class: class Car { constructor(brand) { this.carname = brand; } } mycar = new Car("Ford"); Try it Yourself ? Learn more about classes in our JavaScript Classes chapter. Default Parameter Values ES6 allows function parameters to have default values. Example function myFunction(x, y = 10) { // y is 10 if not passed or undefined return x + y; } myFunction(5); // will return 15 Try it Yourself ? Array.find() The find() method returns the value of the first array element that passes a test function. This example finds (returns the value of ) the first element that is larger than 18: Example var numbers = [4, 9, 16, 25, 29]; var first = numbers.find(myFunction); function myFunction(value, index, array) { return value > 18; } Try it Yourself ? Note that the function takes 3 arguments: The item value The item index The array itself Array.findIndex() The findIndex() method returns the index of the first array element that passes a test function. This example finds the index of the first element that is larger than 18: Example var numbers = [4, 9, 16, 25, 29]; var first = numbers.findIndex(myFunction); function myFunction(value, index, array) { return value > 18; } Try it Yourself ? Note that the function takes 3 arguments: The item value The item index The array itself New Number Properties ES6 added the following properties to the Number object: EPSILON MIN_SAFE_INTEGER MAX_SAFE_INTEGER Example var x = Number.EPSILON; Try it Yourself ? Example var x = Number.MIN_SAFE_INTEGER; Try it Yourself ? Example var x = Number.MAX_SAFE_INTEGER; Try it Yourself ? New Number Methods ES6 added 2 new methods to the Number object: Number.isInteger() Number.isSafeInteger() The Number.isInteger() Method The Number.isInteger() method returns true if the argument is an integer. Example Number.isInteger(10); // returns true Number.isInteger(10.5); // returns false Try it Yourself ? The Number.isSafeInteger() Method A safe integer is an integer that can be exactly represented as a double precision number. The Number.isSafeInteger() method returns true if the argument is a safe integer. Example Number.isSafeInteger(10); // returns true Number.isSafeInteger(12345678901234567890); // returns false Try it Yourself ? Safe integers are all integers from -(253 - 1) to +(253 - 1). This is safe: 9007199254740991. This is not safe: 9007199254740992. New Global Methods ES6 also added 2 new global number methods: isFinite() isNaN() The isFinite() Method The global isFinite() method returns false if the argument is Infinity or NaN. Otherwise it returns true: Example isFinite(10/0); // returns false isFinite(10/1); // returns true Try it Yourself ? The isNaN() Method The global isNaN() method returns true if the argument is NaN. Otherwise it returns false: Example isNaN("Hello"); // returns true Try it Yourself ? Exponentiation Operator The exponentiation operator (**) raises the first operand to the power of the second operand. Example var x = 5; var z = x ** 2; // result is 25 Try it Yourself ? x ** y produces the same result as Math.pow(x,y): Example var x = 5; var z = Math.pow(x,2); // result is 25 Try it Yourself ? ? Previous Next ? COLOR PICKER HOW TO Tabs Dropdowns Accordions Side Navigation Top Navigation Modal Boxes Progress Bars Parallax Login Form HTML Includes Google Maps Range Sliders Tooltips Slideshow Filter List Sort List SHARE CERTIFICATES HTML CSS JavaScript SQL Python PHP jQuery Bootstrap XML Read More ? REPORT ERROR PRINT PAGE FORUM ABOUT ? Report Error If you want to report an error, or if you want to make a suggestion, do not hesitate to send us an e-mail: help@w3schools.com ? Thank You For Helping Us! Your message has been sent to W3Schools. Top Tutorials HTML Tutorial CSS Tutorial JavaScript Tutorial How To Tutorial SQL Tutorial Python Tutorial W3.CSS Tutorial Bootstrap Tutorial PHP Tutorial jQuery Tutorial Java Tutorial C++ Tutorial Top References HTML Reference CSS Reference JavaScript Reference SQL Reference Python Reference W3.CSS Reference Bootstrap Reference PHP Reference HTML Colors jQuery Reference Java Reference Angular Reference Top Examples HTML Examples CSS Examples JavaScript Examples How To Examples SQL Examples Python Examples W3.CSS Examples Bootstrap Examples PHP Examples jQuery Examples Java Examples XML Examples Web Certificates HTML Certificate CSS Certificate JavaScript Certificate SQL Certificate Python Certificate jQuery Certificate PHP Certificate Bootstrap Certificate XML Certificate Get Certified ? W3Schools is optimized for learning, testing, and training. Examples might be simplified to improve reading and basic understanding. Tutorials, references, and examples are constantly reviewed to avoid errors, but we cannot warrant full correctness of all content. While using this site, you agree to have read and accepted our terms of use, cookie and privacy policy. Copyright 1999-2020 by Refsnes Data. All Rights Reserved. Powered by W3.CSS.
